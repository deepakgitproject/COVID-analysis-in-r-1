#this is the code for the analysis
# Add data labels to line graphs that do not overlap in ggplot2, using ggrepel

# Xlsx import using readxl

library(readxl)
COVID_data <- read_excel("COVID-CasesDeathsHosp(Europe and Americas).xlsx", sheet = "data")

# Install 'ggplot2'

install.packages("tidyverse")

# Load library

library(ggplot2)
library(dplyr)
library(scales)

# Create line graph showing sum of New Cases in the UK by month and year

COVID_data$month <- as.Date(cut(COVID_data$Date, breaks = 'month'))

COVID_dataUKgrouped <- COVID_data %>% 
  filter(Location == "United Kingdom") %>% 
  group_by ( month ) %>% 
  summarize( sum ( NewCases ) ) %>% 
  select( month, "NewCases" = "sum(NewCases)" )

Line <- COVID_dataUKgrouped %>%
  ggplot ( aes( x = month,  y = NewCases)) +
  geom_line(color = "blue", size = 2) +
  scale_y_continuous(labels = comma, breaks = seq(0, 1500000, 100000)) +
  scale_x_date(date_labels = "%b-%y" , breaks = "1 month") + 
  theme(axis.text.x = element_text ( size = 10, angle = 90)) +  
  labs(x = "Month", y = "New Cases") +
  geom_point(color = "blue", size = 3) 

plot(Line)


# Add data labels using geom_text

Line + geom_text ( aes (label = NewCases))


# Add data labels using geom_text and suppress overlapping

Line + geom_text ( aes (label = NewCases),
                   check_overlap = TRUE)


# Add data labels using geom_label

Line + geom_label ( aes (label = NewCases))


# Add data labels using geom_label and try suppressing overlapping

Line + geom_label ( aes (label = NewCases),
                    check_overlap = TRUE)


# Install and load in 'ggrepel'

install.packages("ggrepel")
library(ggrepel)


# Add data labels using geom_label_repel, add a comma separator and suppress overlapping

Line + geom_label_repel ( aes (label = scales::comma(NewCases)))


# Add data labels using geom_label_repel, add a comma separator, suppress overlapping and push data labels

Line + geom_label_repel ( aes (label = scales::comma(NewCases)), box.padding = 0.3)

